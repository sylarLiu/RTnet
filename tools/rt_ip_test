#! /usr/bin/env bash

#===================================================================================
#   Copyright (C) 2018 . All rights reserved.
#   
#   File Name    ： rtnet_ip_test
#   Author       ： sylar.liu
#   E-mail       ： sylar_liu65@163.com
#   Created Time ： 2018/11/08 14:54:00
#   Description  ： Test rteth0, with Tcp/Ip protocol.
#                   
# This script is based on:
# https://github.com/kuka-isir/rtt_lwr/blob/rtt_lwr-2.0/lwr_utils/scripts/rtnet
#
#===================================================================================

VERT="\\033[1;32m"
NORMAL="\\033[0;39m"
NC='\033[0m'
ROUGE="\\033[1;31m"
ROSE="\\033[1;35m"
BLUE="\\033[1;34m"
BLANC="\\033[0;02m"
BLANCLAIR="\\033[1;08m"
JAUNE="\\033[1;33m"
CYAN="\\033[1;36m"

# Get the root directory of RTnet
xeno_config="/usr/xenomai/bin/xeno-config"
if [ ! -x $xeno_config ]; then 
	echo -e "$ROUGE""Can not find $xeno_config, install Xenomai first.""$NORMAL"
	exit 1
fi
XENOMAI_VERSION=`$xeno_config --version | cut -d . -f 1`
if [ $XENOMAI_VERSION -eq 2 ]; then
  	prefix="/usr/local/rtnet"	# default install directory on Xenomai2
else
  	prefix="/usr/xenomai"		# default install directory on Xenomai3
fi
echo -e "$VERT""Xenomai$XENOMAI_VERSION found""$NORMAL"

prefix_bin="${prefix}/sbin"
modules_dir="modules"
RTNETCFG="${prefix}/etc/rtnet.conf"
RT_IFACE="rteth0"	# default name of rt NIC

Ip=""
Netmask=""
Target_Ip=""
DEFAULT_IP="192.168.188.200"
DEFAULT_NETMASK="255.255.255.0"
DEFAULT_TARGET_IP="192.168.188.63"
FILE_PATH=$(dirname $0)/$(basename $0)
echo $FILE_PATH

# Check the format of Ip
CheckIp()
{
	if [[ "$1" =~ ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$ ]]; then
		return 0
	else
	  	return 1
	fi
}

# Check the format of Netmask
CheckNetmask()
{
	CheckIp $1
	rtval=`echo $?`
	return $rtval
}

# Set the Ip
SetIp()
{
  	while read -p "Enter your ip to be set[default is $DEFAULT_IP]: " Ip; do
 		if [ -z $Ip ]; then
			Ip="$DEFAULT_IP"
		fi

		CheckIp $Ip
		r=`echo $?`
		if [ $r -eq 0 ]; then
		  	sed -i "s/\(^DEFAULT_IP=\).*/\1\"$Ip\"/" $FILE_PATH
		  	break;
		fi
		echo -e "$ROUGE""$Ip is illegal Ip, enter again.""$NORMAL"
	done
}

# Set the Netmask
SetNetmask()
{
  	while read -p "Enter your netmask to be set[default is $DEFAULT_NETMASK]: " Netmask; do
		if [ -z $Netmask ]; then
			Netmask="$DEFAULT_NETMASK"
		fi

		CheckNetmask $Netmask
		r=`echo $?`
		if [ $r -eq 0 ]; then
		  	sed -i "s/\(^DEFAULT_NETMASK=\).*/\1\"$Netmask\"/" $FILE_PATH
		  	break;
		fi
		echo -e "$ROUGE""$Netmask in an illegal Netmask, enter again.""$NORMAL"
	done
}

SetTargetIp()
{
  	while read -p "Enter target ip[default is $DEFAULT_TARGET_IP]: " TARGET_IP; do
	  	if [ -z $TARGET_IP ]; then
		  	TARGET_IP="$DEFAULT_TARGET_IP"
		fi

		CheckIp $TARGET_IP
		r=`echo $?`
		if [ $r -eq 0 ]; then
		  	sed -i "s/\(^DEFAULT_TARGET_IP=\).*/\1\"$TARGET_IP\"/" $FILE_PATH
		  	break
		fi
		echo -e "ROUGE""$TARGET_IP is an illegal Ip, etner again."
	done
}

Bringup_Target()
{
	target=$1
    sleep_time_s=1.0
    max_trials=10
    rc=0
    count=$max_trials	# Maximum number to try.
    while [ $count -ne 0 ]; do
    	sudo ${prefix_bin}/rtroute solicit $target dev $RT_IFACE
        sudo ${prefix_bin}/rtping -c 1 $target	# Try once.
        rc=$?
        if [ $rc -eq 0 ]; then
        	count=1	# If okay, flag to exit loop.
       	else
        	echo -e "$BLANC" "Remaining trials $count for $slave_name ${NC}"
      	fi
       	count=$((count - 1))	# So we don't go forever.
        sleep $sleep_time_s
	done

  	if [ $rc -eq 0 ] ; then	# Make final determination.
    	echo -e "$VERT""$target is connected. ${NC}"
 	else
       	echo -e "$ROUGE""$target timed out. ${NC}"
  	fi
}

StartTest()
{
   	echo "Starting RealTime Network";

   	# Read the config file
   	if [ -r $RTNETCFG ]; then
       . $RTNETCFG
   	else
    	echo -e "$ROUGE" "Could not read $RTNETCFG ${NC}"
       	exit 1
   	fi

   	sudo ${prefix_bin}/rtnet start
   	sleep 0.5

    sudo ${prefix_bin}/rtifconfig $RT_IFACE up $Ip netmask $Netmask
   	Bringup_Target $TARGET_IP  &
}

StopTest()
{
  	echo "Stoping RealTime Network";
  	cd ${prefix}/sbin/
  	sudo ${prefix_bin}/rtnet stop
}

case $1 in
	start | Start)
		SetIp
		SetNetmask
		SetTargetIp
		StartTest
		;;
	stop | Stop):
		StopTest
		;;
	*):
		echo -e "$ROUGE""Usage: rtnet_ip_test start | stop""$NORMAL"
		;;
esac
exit 0
